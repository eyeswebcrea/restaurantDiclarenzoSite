<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class SpipAccesContentBundleEntitySpipRubriquesProxy extends \Spip\AccesContentBundle\Entity\SpipRubriques implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getMots()
    {
        $this->__load();
        return parent::getMots();
    }

    public function addMot(\Spip\AccesContentBundle\Entity\SpipMots $mot)
    {
        $this->__load();
        return parent::addMot($mot);
    }

    public function getIdRubrique()
    {
        $this->__load();
        return parent::getIdRubrique();
    }

    public function setIdParent($idParent)
    {
        $this->__load();
        return parent::setIdParent($idParent);
    }

    public function getIdParent()
    {
        $this->__load();
        return parent::getIdParent();
    }

    public function setTitre($titre)
    {
        $this->__load();
        return parent::setTitre($titre);
    }

    public function isContainIdMot($id_mot)
    {
        $this->__load();
        return parent::isContainIdMot($id_mot);
    }

    public function isContainMot()
    {
        $this->__load();
        return parent::isContainMot();
    }

    public function getTitre()
    {
        $this->__load();
        return parent::getTitre();
    }

    public function getFullTitre()
    {
        $this->__load();
        return parent::getFullTitre();
    }

    public function getOrder()
    {
        $this->__load();
        return parent::getOrder();
    }

    public function getpathWebLogo()
    {
        $this->__load();
        return parent::getpathWebLogo();
    }

    public function getPathAbsoluteLocalLogo()
    {
        $this->__load();
        return parent::getPathAbsoluteLocalLogo();
    }

    public function getPathLocalLogo()
    {
        $this->__load();
        return parent::getPathLocalLogo();
    }

    public function getDocuments($em = NULL)
    {
        $this->__load();
        return parent::getDocuments($em);
    }

    public function setDescriptif($descriptif)
    {
        $this->__load();
        return parent::setDescriptif($descriptif);
    }

    public function getDescriptif()
    {
        $this->__load();
        return parent::getDescriptif();
    }

    public function setTexte($texte)
    {
        $this->__load();
        return parent::setTexte($texte);
    }

    public function getTexte()
    {
        $this->__load();
        return parent::getTexte();
    }

    public function setIdSecteur($idSecteur)
    {
        $this->__load();
        return parent::setIdSecteur($idSecteur);
    }

    public function getIdSecteur()
    {
        $this->__load();
        return parent::getIdSecteur();
    }

    public function setMaj($maj)
    {
        $this->__load();
        return parent::setMaj($maj);
    }

    public function getMaj()
    {
        $this->__load();
        return parent::getMaj();
    }

    public function setExport($export)
    {
        $this->__load();
        return parent::setExport($export);
    }

    public function getExport()
    {
        $this->__load();
        return parent::getExport();
    }

    public function setIdImport($idImport)
    {
        $this->__load();
        return parent::setIdImport($idImport);
    }

    public function getIdImport()
    {
        $this->__load();
        return parent::getIdImport();
    }

    public function setStatut($statut)
    {
        $this->__load();
        return parent::setStatut($statut);
    }

    public function getStatut()
    {
        $this->__load();
        return parent::getStatut();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setLang($lang)
    {
        $this->__load();
        return parent::setLang($lang);
    }

    public function getLang()
    {
        $this->__load();
        return parent::getLang();
    }

    public function setLangueChoisie($langueChoisie)
    {
        $this->__load();
        return parent::setLangueChoisie($langueChoisie);
    }

    public function getLangueChoisie()
    {
        $this->__load();
        return parent::getLangueChoisie();
    }

    public function setExtra($extra)
    {
        $this->__load();
        return parent::setExtra($extra);
    }

    public function getExtra()
    {
        $this->__load();
        return parent::getExtra();
    }

    public function setStatutTmp($statutTmp)
    {
        $this->__load();
        return parent::setStatutTmp($statutTmp);
    }

    public function getStatutTmp()
    {
        $this->__load();
        return parent::getStatutTmp();
    }

    public function setDateTmp($dateTmp)
    {
        $this->__load();
        return parent::setDateTmp($dateTmp);
    }

    public function getLogo()
    {
        $this->__load();
        return parent::getLogo();
    }

    public function getDateTmp()
    {
        $this->__load();
        return parent::getDateTmp();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'mots', 'documents', 'idRubrique', 'idParent', 'titre', 'descriptif', 'texte', 'idSecteur', 'maj', 'export', 'idImport', 'statut', 'date', 'lang', 'langueChoisie', 'extra', 'statutTmp', 'dateTmp');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}